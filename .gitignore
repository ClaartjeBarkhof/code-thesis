# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Optimus output and data folder
Experimentation/Optimus/output/
Experimentation/Optimus/data/
Experimentation/Optimus/claartje/evaluation-results/

# Don't include data on Git
NewsVAE/Data/

.idea/
/NewsVAE/lightning_logs/

/NewsVAE_old/
/NewsVAE/NewsData/
/NewsVAE/Runs/
/Plotting/
/NewsVAE/evaluation/result-files/
/job_scripts/
/NewsVAE/evaluation/14JAN/
/NewsVAE/evaluation/23NOV-evaluate-beta-vs-mmd/
/NewsVAE/evaluation/29DEC/
/NewsVAE/evaluation/30NOV-autoencoder-vs-MMD-VAE/
/NewsVAE/evaluation/train_latents.pickle
/NewsVAE/evaluation/proposal-and-before/
/NewsVAE/pytorch-constrained-opt/
/NewsVAE/Old/
/NewsVAE/evaluation/proposal-and-before/
/NewsVAE/development-notebooks/
/Experimentation/
/NewsVAE/runs_overview/
/NewsVAE/Runs-till-May-17/
/bda-vae-analysis/
/NewsVAE/final-analysis/result-files/
/NewsVAE/final-analysis/plots/
/NewsVAE/final-analysis/.ipynb_checkpoints/
/NewsVAE/final-analysis/plots/
/NewsVAE/final-analysis/result-files/
/NewsVAE/final-analysis/bad-VI-illustrative-example.ipynb
/NewsVAE/final-analysis/big_exp_run_overview.ipynb
/NewsVAE/final-analysis/drawing-bad-VI.ipynb
/NewsVAE/final-analysis/find-best-pareto-checkpoint.ipynb
/NewsVAE/final-analysis/gather-sum-stats.ipynb
/NewsVAE/final-analysis/likelihood-plots.ipynb
/NewsVAE/final-analysis/make_cmaps.py
/NewsVAE/final-analysis/manage-pareto-checkpoints.ipynb
/NewsVAE/final-analysis/not-good-posteriors.ipynb
/NewsVAE/final-analysis/plot-jsd.ipynb
/NewsVAE/final-analysis/results-ablation.ipynb
/NewsVAE/final-analysis/run_jsd.ipynb
/NewsVAE/final-analysis/run_jsd_over_seq.py
/NewsVAE/final-analysis/run_overview.csv
/NewsVAE/final-analysis/run_overview.ipynb
/NewsVAE/final-analysis/run_sum_stats.ipynb
/NewsVAE/final-analysis/run_sum_stats.py
/NewsVAE/final-analysis/Runs-ablation_run_overview.csv
/NewsVAE/final-analysis/Runs-target-rate_run_overview.csv
/NewsVAE/final-analysis/Runs_run_overview.csv
/NewsVAE/final-analysis/sketch.png
/NewsVAE/final-analysis/target-rate-plots.ipynb
/NewsVAE/final-analysis/
/NewsVAE/evaluation/
/NewsVAE/constraintoptim/
/NewsVAE/model-checkpoints/
/code-thesis-AWS/
/NewsVAE/torch-two-sample/
/AWS-final-analysis/
